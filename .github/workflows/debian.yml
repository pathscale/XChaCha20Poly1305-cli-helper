name: Build Package (ARM64 and AMD64)

on:
  push:
    branches:
      - main

jobs:
  build_arm64:
    runs-on: buildjet-4vcpu-ubuntu-2204-arm

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.77.1
        override: true

    - name: Ubuntu version 
      run: lsb_release -a

    - name: Cache Cargo registry
      uses: buildjet/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo index
      uses: buildjet/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Cache target directory
      uses: buildjet/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-

    - name: rustfmt
      run: rustup component add rustfmt

    - name: Install cargo-deb
      run: cargo install cargo-deb --no-default-features

    - name: Build Rust project
      env:
        PACKAGES: "chacha_poly"
      run: |
        for package in $PACKAGES; do
          cargo build --package $package --release
        done

    - name: Create Debian package
      run: cargo deb --no-build --deb-version 1.0.${{ github.run_number }} --no-strip -p chacha_poly -o ./target/debian/chacha_poly_1.0.${{ github.run_number }}_arm64.deb
      
    - name: List Deb files
      run: | 
         find ./target/debian/*.deb

    - name: Upload to bunny
      env: 
          STORAGE_API_KEY: ${{ secrets.BUNNYCDN_STORAGE_API_KEY }}
          ZONE_API_KEY: ${{ secrets.BUNNYCDN_ZONE_API_KEY }}
          ZONE_ID: ${{ secrets.BUNNYCDN_DEV_ZONE_ID }}
          STORAGE_NAME: ${{ secrets.BUNNYCDN_STORAGE_NAME }}
      run: | 
          curl -s --request PUT --header "AccessKey: $STORAGE_API_KEY" -T ./target/debian/chacha_poly_1.0.${{ github.run_number }}_arm64.deb "https://storage.bunnycdn.com/$STORAGE_NAME/"
          curl -s --request POST --header "AccessKey: $ZONE_API_KEY" --header "Content-Type: application/json" --header "Accept: application/json" "https://bunnycdn.com/api/pullzone/$ZONE_ID/purgeCache" --data "{"id":"$ZONE_ID"}"
  
  build_amd64:
    runs-on: buildjet-4vcpu-ubuntu-2204

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.77.1
        override: true

    - name: Ubuntu version 
      run: lsb_release -a

    - name: Cache Cargo registry
      uses: buildjet/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo index
      uses: buildjet/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Cache target directory
      uses: buildjet/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-

    - name: rustfmt
      run: rustup component add rustfmt

    - name: Install cargo-deb
      run: cargo install cargo-deb --no-default-features

    - name: Build Rust project
      env:
        PACKAGES: "chacha_poly"
      run: |
        for package in $PACKAGES; do
          cargo build --package $package --release
        done

    - name: Create Debian package
      run: cargo deb --no-build --deb-version 1.0.${{ github.run_number }} --no-strip -p chacha_poly -o ./target/debian/chacha_poly_1.0.${{ github.run_number }}_amd64.deb
      
    - name: List deb files
      run: | 
         find ./target/debian/*.deb

    - name: Upload to bunny
      env: 
          STORAGE_API_KEY: ${{ secrets.BUNNYCDN_STORAGE_API_KEY }}
          ZONE_API_KEY: ${{ secrets.BUNNYCDN_ZONE_API_KEY }}
          ZONE_ID: ${{ secrets.BUNNYCDN_DEV_ZONE_ID }}
          STORAGE_NAME: ${{ secrets.BUNNYCDN_STORAGE_NAME }}
      run: | 
          curl -s --request PUT --header "AccessKey: $STORAGE_API_KEY" -T ./target/debian/chacha_poly_1.0.${{ github.run_number }}_amd64.deb "https://storage.bunnycdn.com/$STORAGE_NAME/"
          curl -s --request POST --header "AccessKey: $ZONE_API_KEY" --header "Content-Type: application/json" --header "Accept: application/json" "https://bunnycdn.com/api/pullzone/$ZONE_ID/purgeCache" --data "{"id":"$ZONE_ID"}"
